/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package config;
import componentes.KDialog;
import componentes.KFrame;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author JCORREA
 */
public class Config extends KFrame {

    /*Constantes de configuracion*/
    /**Esta constante representa el directorio por default de trabajo,
     * la carpeta predefinida para guardar las misiones*/
    public static final String  CONF_K_DIR_TRABAJO = "K_DIR_TRABAJO";
    /**Esta constante representa el prefijo para las pruebas*/
    public static final String  CONF_K_PREF_PRUEBAS = "K_PREF_PRUEBAS";
    /**Esta constante representa la variable para las pruebas (cambio en nombre)*/
    public static final String  CONF_K_VAR_PRUEBAS = "K_VAR_PRUEBAS";
    
    private static Config dialogo;
    
    private Config() {
        super("Configuracion");
        try {
            ManejadorConfiguarciones.recuperaConfiguraciones();
        } catch (IOException ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }
    
    /**
     * Este metodo asegura que solo exista una instancia 
     * de Config para no crear mas de un dialogo
     * @return 
     */
    private static Config panelConfig(){
        if(dialogo == null)
            dialogo = new Config();
        return dialogo;
    }
    
    public static void lanzaPanelConfiguraiones(){
        panelConfig().setVisible(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConfiguraciones = new KTableConfiguraciones(ManejadorConfiguarciones.configuraciones);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(tblConfiguraciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addGap(25, 25, 25)
                .addComponent(btnGuardar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardaCambios();
        setVisible(false);
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * Este meodo guarda el archivo de configuraciones
     */
    private void guardaCambios(){
        try {
            ManejadorConfiguarciones.actualizaConfiguraciones(((KTableConfiguraciones)tblConfiguraciones).getConfiguraciones());
        } catch (IOException ex) {
            new KDialog(null, "Error al guardar las configuraciones", KDialog.Tipo.ALERTA).setVisible(true);
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblConfiguraciones;
    // End of variables declaration//GEN-END:variables
}
